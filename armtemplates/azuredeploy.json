{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "Admin username for VM"
        }
      },
      "numberOfInstances": {
        "type": "int",
        "defaultValue": 3,
        "minValue": 2,
        "maxValue": 5,
        "metadata": {
          "description": "Number of VMs to deploy, limit 5 since this sample is using a single storage account"
        }
      },
      "OS": {
        "type": "string",
        "defaultValue": "Windows",
        "allowedValues": [
          "Ubuntu",
          "Windows"
        ],
        "metadata": {
          "description": "OS Platform for the VM"
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "allowedValues": [
          "westeurope"
        ],        
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "password",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        }
      },
      "virtualNetworkName": {
        "type": "string",
        "defaultValue": "customer-a-vn",        
        "metadata": {
          "description": "virtualNetworkName"
        }   
      },    
      "virtualNetworkResourceGroup": {
        "type": "string",
        "defaultValue": "customer-a-rg-vn",        
        "metadata": {
          "description": "RG where Vnet is deployed"
        }
      },
      "subnetName": {
        "type": "string",
        "defaultValue": "customer-a-sub-vm",        
        "metadata": {
          "description": "Subnet where VMs should be running in"
        }
      }            
    },
    "variables": {

      "vnetID": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
      "subnet1Ref": "[concat(variables('vnetID'),'/subnets/', parameters('subnetName'))]",
      "vmName": "customer-a-solr-cl-",      
      "availabilitySetName": "customer-a-solr-avset",
      "Ubuntu": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "16.04.0-LTS",
        "version": "latest"
      },
      "Windows": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2019-Datacenter",
        "version": "latest"
      },
      "imageReference": "[variables(parameters('OS'))]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('adminPasswordOrKey')]"
            }
          ]
        }
      }
    },
    "resources": [
      {
        "type": "Microsoft.Compute/availabilitySets",
        "name": "[variables('availabilitySetName')]",
        "apiVersion": "2016-04-30-preview",
        "location": "[parameters('location')]",
        "properties": {
          "platformFaultDomainCount": 2,
          "platformUpdateDomainCount": 2,
          "managed": true
        }
      },

      {
        "apiVersion": "2017-08-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "location": "[resourceGroup().location]",
        "name": "[concat(variables('vmName'),'pip-', copyindex())]",
        "sku": {
          "name": "Standard"
        },        
        "copy": {
          "name": "pipCopy",
          "count": "[parameters('numberOfInstances')]"
        },
        "properties": {
          "publicIPAllocationMethod": "Static"
        }
      },
      {
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('vmName'),'nic-', copyindex())]",
        "apiVersion": "2016-03-30",
        "location": "[parameters('location')]",
        "copy": {
          "name": "nicLoop",
          "count": "[parameters('numberOfInstances')]"
        },
        "dependsOn": [
          "pipCopy"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('subnet1Ref')]"
                },
               "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('vmName'),'pip-', copyindex()))]"
              } 
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[concat(variables('vmName'), copyIndex())]",
        "apiVersion": "2016-04-30-preview",
        "location": "[parameters('location')]",
        "copy": {
          "name": "virtualMachineLoop",
          "count": "[parameters('numberOfInstances')]"
        },
        "dependsOn": [
          "nicLoop"
        ],
        "properties": {
          "availabilitySet": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
          },
          "hardwareProfile": {
            "vmSize": "Standard_DS3_v2"
          },
          "osProfile": {
            "computerName": "[concat('vm', copyIndex())]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPasswordOrKey')]",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "storageProfile": {
            "imageReference": "[variables('imageReference')]",
            "osDisk": {
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('vmName'),'nic-', copyindex()))]"
              }
            ]
          }
        }
      }
    ]
  }